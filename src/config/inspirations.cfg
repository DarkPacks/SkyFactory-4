# Configuration file

~CONFIG_VERSION: 0.3

building {
    # Enables the bookshelf: a decorative block to display books [default: true]
    B:bookshelf=true

    # Enables enlightened bushes: bushes with lights. [default: true]
    B:enlightenedBush=true

    # Enables additional flowers from breaking double flowers with shears. [default: true]
    B:flowers=true

    # Enables glass doors and trapdoors: basically doors, but made of glass. Not sure what you would expect. [default: true]
    B:glassDoor=true

    # Enables mulch: a craftable falling block which supports plants such as flowers [default: true]
    B:mulch=true

    # Enables stone paths: a carpet like decorative block for making decorative paths [default: true]
    B:path=true

    # Enables rope: can be climbed like ladders and extended with additional rope [default: true]
    B:rope=true

    bookshelf {
        # List of keywords for valid books, used to determine valid books in the bookshelf [default: [almanac], [atlas], [book], [catalogue], [concordance], [dictionary], [directory], [encyclopedia], [guide], [journal], [lexicon], [manual], [thesaurus], [tome]]
        S:bookKeywords <
            atlas
            book
            catalogue
            guide
            journal
            lexicon
            manual
            tome
         >

        # List of itemstacks to override book behavior. Format is modid:name[:meta]->enchantingPower.
        # Unset meta will default wildcard.
        # Enchanting power default is 1.5. Set to 'false' to mark something as not a book.
        S:bookOverrides <
            defiledlands:book_wyrm_raw:0->false
            defiledlands:book_wyrm_cooked:0->false
            defiledlands:book_wyrm_scale:0->false
            defiledlands:book_wyrm_scale_golden:0->false
            defiledlands:book_wyrm_analyzer:0->false
            theoneprobe:probenote:0->1.5
            minecraft:enchanted_book->2.5
            quark:ancient_tome->3.0
         >

        # Enables colored books: basically colored versions of the vanilla book to decorate bookshelves [default: true]
        B:coloredBooks=false
    }

}


compatibility {
    # Enables making Tough as Nails juices in the cauldron. Requires enhanced cauldron [default: true]
    B:tanJuiceInCauldron=true
}


general {
    # Shows all variants for dynamically textured blocks, like bookshelves. If false just the first will be shown [default: true]
    B:showAllVariants=false

    # Enables the wither bone drop. Option here in case another mod adds this. Requires either nether crooks or extra potions to be enabled [default: true]
    B:witherBoneDrop=false
}


recipes {
    # Anvils break glass blocks and transform blocks into other blocks on landing. Uses a block override, so disable if another mod replaces anvils [default: true]
    B:anvilSmashing=true

    # Allows additional recipes to be performed in the cauldron. Can be 'true', 'false', or 'simple'. If true, requires a block substitution. If simple, functionality will be limited to water in cauldrons. [default: true]
    S:extendCauldron=true

    cauldron {
        # Makes the cauldron hold 4 bottle per bucket instead of 3. Translates better to modded fluids. [default: false]
        B:bigger=true

        # Allows dispensers to perform some recipes in the cauldron. Intended to be used for recipes to fill and empty fluid containers as droppers can already be used for recipes [default: true]
        B:dispenser=true

        # Cauldrons will drop their contents when broken. [default: false]
        B:dropContents=false

        # Allows cauldrons to be filled with dyes and dye items using cauldrons [default: true]
        B:dyeing=true

        # Cauldrons fill faster in the rain than vanilla painfully slow rate. [default: true]
        B:fasterRain=true

        # List of blocks to act is fire below a cauldron. Format is modid:name[:meta]. If meta is excluded all states of the block will count as fire
        S:fires <
            minecraft:fire
            minecraft:magma
            minecraft:lava
            minecraft:torch
            torchmaster:mega_torch
            tconstruct:stone_torch
            integrateddynamics:menril_torch
            integrateddynamics:menril_torch_stone
         >

        # Allows cauldrons to be filled with any fluid and use them in recipes [default: true]
        B:fluids=true

        # Allows cauldrons to be filled with potions and support brewing [default: true]
        B:potions=true

        # List of recipes to add to the cauldron on right click. Format is (modid:input:meta|oreString)->modid:output:meta[->isBoiling]. If isBoiling is excluded, it defaults to false.
        S:recipes <
            minecraft:sticky_piston->minecraft:piston
         >

        # Allows sponges to be used to empty the cauldron of dye, water, or potions. Can be 'true', 'false', or 'full'. If set to 'full', requires the cauldron to be full, prevents duplicating water but is less useful for removing unwanted fluids. [default: true]
        S:spongeEmpty=true

        dyeing {
            # Adds extra dyed bottle recipes to craft green and brown [default: true]
            B:extraBottleRecipes=true

            # Makes crafting two dyed water bottles together produce a dyed water bottle. Requires modifying vanilla recipes to prevent a conflict [default: true]
            B:patchVanillaRecipes=true
        }

        potions {
            # Allows cauldrons to perform brewing recipes. [default: true]
            B:brewing=true

            # Caps brewing at 2 potions per ingredient, requiring 2 ingredients for a full cauldron. Makes the brewing stand still useful and balances better against the bigger cauldron. [default: true]
            B:brewingExpensive=true
        }

        fluids {
            # Registers milk as a fluid so it can be used in cauldron recipes. [default: true]
            B:milk=true
        }

        dispenser {
            # List of itemstacks that can be used as to perform cauldron recipes in a dispenser
            S:items <
                inspirations:dyed_bottle
                inspirations:materials:2
                inspirations:materials:3
                minecraft:beetroot_soup
                minecraft:bowl
                minecraft:glass_bottle
                minecraft:lingering_potion
                minecraft:mushroom_stew
                minecraft:potion
                minecraft:rabbit_stew
                minecraft:splash_potion
                toughasnails:fruit_juice
                toughasnails:purified_water_bottle
             >
        }

    }

    anvilsmashing {
        # List of blocks to add to anvil smashing. Format is modid:input[:meta][->modid:output[:meta]]. If the output is excluded, it will default to air (breaking the block). If the meta is excluded, it will check all states for input and use the default for output
        S:smashing <
            # Stone
            minecraft:stone:0->minecraft:cobblestone
            minecraft:stonebrick->minecraft:cobblestone
            minecraft:stonebrick:1->minecraft:mossy_cobblestone
            minecraft:cobblestone->minecraft:gravel
            minecraft:stone:2->minecraft:stone:1
            minecraft:stone:4->minecraft:stone:3
            minecraft:stone:6->minecraft:stone:5
            # Sandstone
            minecraft:sandstone->minecraft:sand:0
            minecraft:red_sandstone->minecraft:sand:1
            # Ice
            minecraft:packed_ice->minecraft:ice
            minecraft:ice
            minecraft:frosted_ice
            # Plants
            minecraft:brown_mushroom_block
            minecraft:red_mushroom_block
            minecraft:leaves
            minecraft:leaves2
            minecraft:melon_block
            minecraft:pumpkin
            minecraft:lit_pumpkin
            # Concrete
            minecraft:concrete:0->minecraft:concrete_powder:0
            minecraft:concrete:1->minecraft:concrete_powder:1
            minecraft:concrete:2->minecraft:concrete_powder:2
            minecraft:concrete:3->minecraft:concrete_powder:3
            minecraft:concrete:4->minecraft:concrete_powder:4
            minecraft:concrete:5->minecraft:concrete_powder:5
            minecraft:concrete:6->minecraft:concrete_powder:6
            minecraft:concrete:7->minecraft:concrete_powder:7
            minecraft:concrete:8->minecraft:concrete_powder:8
            minecraft:concrete:9->minecraft:concrete_powder:9
            minecraft:concrete:10->minecraft:concrete_powder:10
            minecraft:concrete:11->minecraft:concrete_powder:11
            minecraft:concrete:12->minecraft:concrete_powder:12
            minecraft:concrete:13->minecraft:concrete_powder:13
            minecraft:concrete:14->minecraft:concrete_powder:14
            minecraft:concrete:15->minecraft:concrete_powder:15
            # Misc
            minecraft:planks->inspirations:mulch:0
            minecraft:prismarine:1->minecraft:prismarine:0
            minecraft:end_bricks->minecraft:end_stone
            minecraft:monster_egg
         >
    }

    cauldronrecipes {
    }

}


tools {
    # Enables the barometer: a tool to measure the player's height in world. [default: true]
    B:barometer=false

    # Enables the charged arrow: places a redstone pulse where it lands [default: true]
    B:chargedArrow=true

    # Enables the crook: a tool to break leaves faster and increase sapling chance. Can be 'true', 'false', or 'simple'. If true, adds a new tool. If simple, functionality will be added to hoes instead. [default: true]
    S:crook=true

    # Enables locks and keys: an item allowing you to lock a tile entity to only open for a special named item [default: true]
    B:lock=false

    # Enables the north compass: a cheaper compass that always points north. Intended to either allow packs to replace the compass or as an alternative for F3 navigation [default: true]
    B:northCompass=false

    # Enables the redstone charger: a quick pulse created with a flint and steel like item [default: true]
    B:redstoneCharge=false

    crook {
        # Chance of a sapling to drop when using the crook. Acts as 1 in [chance] if the initial sapling drop fails. Set to 1 to always drop saplings when using a crook. [range: 1 ~ 100, default: 10]
        I:chance=10

        # Enables crooks crafted from blaze rods and wither bones. They have higher stats than other crooks and inflict fire and wither on the target respectively. [default: true]
        B:netherCrooks=true
    }

    shears {
        # When shearing vines, any supported vines will also be sheared instead of just broken [default: true]
        B:harvestHangingVines=true

        # Breaking a melon block with shears will always return 9 slices [default: true]
        B:reclaimMelons=true
    }

    northcompass {
        # Renames the vanilla compass to 'origin compass' to help clarify the difference between the two compasses. [default: true]
        B:renameVanilla=false
    }

}


tweaks {
    # Replaces the flat cauldron sprite with the 3D cauldron block model [default: true]
    B:betterCauldronItemModel=true

    # Flower pots can hold modded flowers [default: true]
    B:betterFlowerPot=true

    # Adds brewing recipes for vanilla potions which are missing a recipe [default: true]
    B:brewMissingPotions=true

    # The ribbon on enchanted books colors based on the enchantment rarity [default: true]
    B:coloredEnchantedRibbons=true

    # Colors the fireworks item based on the colors of the stars [default: true]
    B:coloredFireworkItems=true

    # Allows pigs to be desaddled by shift-right click with an empty hand [default: true]
    B:desaddlePig=true

    # Dispensers will place anvils instead of dropping them. Plays well with anvil smashing. [default: true]
    B:dispensersPlaceAnvils=true

    # Bonemeal can be used on mycelium to produce mushrooms and on sand to produce dead bushes [default: true]
    B:extraBonemeal=true

    # Carpets fit to stairs. Uses a block override, so disable if another mod replaces carpets [default: true]
    B:fittedCarpets=true

    # Enables heartbeets: a rare drop from beetroots which can be eaten to restore a bit of health [default: true]
    B:heartbeet=true

    # Lily pads prevent fall damage, but break in the process [default: true]
    B:lilypadBreakFall=true

    # Adds a cooldown to milking cows, prevents practically infinite milk in modded worlds where milk is more useful. [default: false]
    B:milkCooldown=false

    # Allows milking squids with a glass bottle to get black dyed water. [default: false]
    B:milkSquids=true

    # Adds seeds for additional vanilla plants, including cactus, sugar cane, carrots, and potatoes. [default: true]
    B:moreSeeds=true

    # Adds stackable recipes to some vanilla or Inspriations items that require unstackable items to craft [default: true]
    B:unstackableRecipeAlts=true

    heartbeet {
        # Allows heartbeets to be used as an alternative to ghast tears in making potions of regeneration [default: true]
        B:brewRegeneration=true

        # Chance of a heartbeet to drop instead of a normal drop. Formula is two 1 in [chance] chances for it to drop each harvest [range: 10 ~ 1000, default: 75]
        I:chance=75
    }

    betterflowerpot {
        # Flower pots will emit a comparator signal if they have a flower [default: true]
        B:comparator=true

        # List of itemstacks to override default flower behavior, default checks for BlockBush.
        # Format is 'modid:name[:meta]->power'. Unset meta will default wildcard. Power refers to comparator power, non-zero makes it valid for a flower pot. Specific values:
        # * 0 - not flower, blacklists from placing in a flower pot
        # * 1 - mushroom
        # * 4 - fern
        # * 7 - flower
        # * 10 - dead bush
        # * 12 - sapling
        # * 15 - cactus
        S:flowerOverrides <
         >
    }

    moreseeds {
        # Makes carrot and potato seeds drop from grass [default: true]
        B:grassDrops=true

        # Makes carrots and potatoes drop their respective seed if not fully grown [default: true]
        B:nerfCarrotPotatoDrops=true
    }

    milksquids {
        # Delay in seconds after milking a squid before it can be milked again. [range: 1 ~ 32767, default: 300]
        I:cooldown=300
    }

    milkcooldown {
        # List of containers which will milk a cow when interacting. Used to prevent milking and to apply the milked tag
        S:containers <
            ceramics:clay_bucket
            minecraft:bowl
            minecraft:bucket
         >

        # Delay in seconds after milking a cow before it can be milked again. [range: 1 ~ 32767, default: 600]
        I:time=600
    }

}


utility {
    # Enables button blocks disguised as a full bricks or nether bricks block [default: true]
    B:bricksButton=true

    # Allows placing a carpet on a stone pressure plate to hide it [default: true]
    B:carpetedPressurePlate=true

    # Enables carpeted trapdoors: a trapdoor which appears to be a carpet when closed [default: true]
    B:carpetedTrapdoor=true

    # Enables the collector: extracts items from inventories or the world similar to a hopper, but can face in all 6 directions and cannot place items in inventories [default: true]
    B:collector=true

    # Allows dispensers to fill and empty fluid tanks using fluid containers [default: true]
    B:dispenserFluidTanks=true

    # Enables pipes: a more economical hopper that only outputs items, does not pull from inventories. Both cheaper and better for performance. [default: true]
    B:pipe=true

    # Enables the redstone barrel: a block that gives a configurable comparator output and can be pushed by pistons [default: true]
    B:redstoneBarrel=true

    # Enables the trapped book: will emit redstone power when placed in a bookshelf. Requires bookshelf. [default: true]
    B:redstoneBook=true

    # Enables the redstone torch lever: a lever that toggles its state when the block it's on gets powered [default: true]
    B:redstoneTorchLever=true

    # Enables the torch lever: basically a lever which looks like a torch [default: true]
    B:torchLever=true

    pipe {
        # Allows pipes to output upwards. This removes a limitation on not being able to pipe items up without dropper elevators, but should be balanced alongside modded pipes. [default: true]
        B:upwards=true
    }

    dispenserfluidtanks {
        # List of itemstacks that can be used as fluid containers to fill or empty fluid tanks
        S:containers <
            ceramics:clay_bucket
            forge:bucketfilled
            minecraft:bucket
            minecraft:water_bucket
            minecraft:milk_bucket
            minecraft:lava_bucket
         >
    }

}


